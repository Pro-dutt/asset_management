{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { notifyError, notifySuccess } from \"@/components/Notification\";\nimport { useState, useCallback } from \"react\";\n\n/**\n * Custom hook for handling success notifications and messages\n * @returns {Object} Object containing success message state and notification handler\n */\nexport const useSuccessNotification = () => {\n  _s();\n  const [successMessages, setSuccessMessages] = useState({});\n  const showSuccessNotification = useCallback(({\n    key,\n    value,\n    message,\n    hideNotification = false\n  }) => {\n    try {\n      const notificationMessage = (value === null || value === void 0 ? void 0 : value.message) || message;\n      setSuccessMessages(prevMessages => ({\n        ...prevMessages,\n        [key]: notificationMessage\n      }));\n      if (!hideNotification) {\n        notifySuccess(notificationMessage);\n      }\n    } catch (error) {\n      console.error(\"Failed to display success notification:\", error);\n    }\n  }, []);\n  return {\n    successMessages,\n    setSuccessMessages,\n    showSuccessNotification\n  };\n};\n\n/**\n * Custom hook for handling error notifications and messages\n * @returns {Object} Object containing error message state and notification handler\n */\n_s(useSuccessNotification, \"gqhDl6erVv4Pk37j2N4JvX4VndY=\");\nexport const useErrorNotification = () => {\n  _s2();\n  const [errorMessages, setErrorMessages] = useState({});\n  const showErrorNotification = useCallback(({\n    key,\n    value,\n    message,\n    hideNotification = false\n  }) => {\n    try {\n      var _value$response, _value$response$data;\n      const notificationMessage = (value === null || value === void 0 ? void 0 : (_value$response = value.response) === null || _value$response === void 0 ? void 0 : (_value$response$data = _value$response.data) === null || _value$response$data === void 0 ? void 0 : _value$response$data.message) || message || \"An unexpected error occurred\";\n      setErrorMessages(prevMessages => {\n        var _value$response2, _value$response2$data;\n        return {\n          ...prevMessages,\n          [key]: (value === null || value === void 0 ? void 0 : (_value$response2 = value.response) === null || _value$response2 === void 0 ? void 0 : (_value$response2$data = _value$response2.data) === null || _value$response2$data === void 0 ? void 0 : _value$response2$data.errors) || []\n        };\n      });\n      if (!hideNotification && notificationMessage !== \"Validation Failed\") {\n        notifyError(notificationMessage);\n      }\n    } catch (error) {\n      console.error(\"Failed to display error notification:\", error);\n    }\n  }, []);\n  return {\n    errorMessages,\n    setErrorMessages,\n    showErrorNotification\n  };\n};\n_s2(useErrorNotification, \"sdk8mamytlR62tAelSfssVarGwc=\");","map":{"version":3,"names":["notifyError","notifySuccess","useState","useCallback","useSuccessNotification","_s","successMessages","setSuccessMessages","showSuccessNotification","key","value","message","hideNotification","notificationMessage","prevMessages","error","console","useErrorNotification","_s2","errorMessages","setErrorMessages","showErrorNotification","_value$response","_value$response$data","response","data","_value$response2","_value$response2$data","errors"],"sources":["/home/user/Documents/Asset-Management/src/services/hooks/notification/index.js"],"sourcesContent":["import { notifyError, notifySuccess } from \"@/components/Notification\";\nimport { useState, useCallback } from \"react\";\n\n/**\n * Custom hook for handling success notifications and messages\n * @returns {Object} Object containing success message state and notification handler\n */\nexport const useSuccessNotification = () => {\n    const [successMessages, setSuccessMessages] = useState({});\n\n    const showSuccessNotification = useCallback(({ key, value, message, hideNotification = false }) => {\n        try {\n            const notificationMessage = value?.message || message;\n\n            setSuccessMessages((prevMessages) => ({\n                ...prevMessages,\n                [key]: notificationMessage,\n            }));\n\n            if (!hideNotification) {\n                notifySuccess(notificationMessage);\n            }\n        } catch (error) {\n            console.error(\"Failed to display success notification:\", error);\n        }\n    }, []);\n\n    return {\n        successMessages,\n        setSuccessMessages,\n        showSuccessNotification,\n    };\n};\n\n/**\n * Custom hook for handling error notifications and messages\n * @returns {Object} Object containing error message state and notification handler\n */\nexport const useErrorNotification = () => {\n    const [errorMessages, setErrorMessages] = useState({});\n\n    const showErrorNotification = useCallback(({ key, value, message, hideNotification = false }) => {\n        try {\n            const notificationMessage = value?.response?.data?.message || message || \"An unexpected error occurred\";\n\n            setErrorMessages((prevMessages) => ({\n                ...prevMessages,\n                [key]: value?.response?.data?.errors || [],\n            }));\n\n            if (!hideNotification && notificationMessage !== \"Validation Failed\") {\n                notifyError(notificationMessage);\n            }\n        } catch (error) {\n            console.error(\"Failed to display error notification:\", error);\n        }\n    }, []);\n\n    return {\n        errorMessages,\n        setErrorMessages,\n        showErrorNotification,\n    };\n};\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,aAAa,QAAQ,2BAA2B;AACtE,SAASC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;;AAE7C;AACA;AACA;AACA;AACA,OAAO,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1D,MAAMM,uBAAuB,GAAGL,WAAW,CAAC,CAAC;IAAEM,GAAG;IAAEC,KAAK;IAAEC,OAAO;IAAEC,gBAAgB,GAAG;EAAM,CAAC,KAAK;IAC/F,IAAI;MACA,MAAMC,mBAAmB,GAAG,CAAAH,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,OAAO,KAAIA,OAAO;MAErDJ,kBAAkB,CAAEO,YAAY,KAAM;QAClC,GAAGA,YAAY;QACf,CAACL,GAAG,GAAGI;MACX,CAAC,CAAC,CAAC;MAEH,IAAI,CAACD,gBAAgB,EAAE;QACnBX,aAAa,CAACY,mBAAmB,CAAC;MACtC;IACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IACnE;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACHT,eAAe;IACfC,kBAAkB;IAClBC;EACJ,CAAC;AACL,CAAC;;AAED;AACA;AACA;AACA;AAHAH,EAAA,CA3BaD,sBAAsB;AA+BnC,OAAO,MAAMa,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACtC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtD,MAAMmB,qBAAqB,GAAGlB,WAAW,CAAC,CAAC;IAAEM,GAAG;IAAEC,KAAK;IAAEC,OAAO;IAAEC,gBAAgB,GAAG;EAAM,CAAC,KAAK;IAC7F,IAAI;MAAA,IAAAU,eAAA,EAAAC,oBAAA;MACA,MAAMV,mBAAmB,GAAG,CAAAH,KAAK,aAALA,KAAK,wBAAAY,eAAA,GAALZ,KAAK,CAAEc,QAAQ,cAAAF,eAAA,wBAAAC,oBAAA,GAAfD,eAAA,CAAiBG,IAAI,cAAAF,oBAAA,uBAArBA,oBAAA,CAAuBZ,OAAO,KAAIA,OAAO,IAAI,8BAA8B;MAEvGS,gBAAgB,CAAEN,YAAY;QAAA,IAAAY,gBAAA,EAAAC,qBAAA;QAAA,OAAM;UAChC,GAAGb,YAAY;UACf,CAACL,GAAG,GAAG,CAAAC,KAAK,aAALA,KAAK,wBAAAgB,gBAAA,GAALhB,KAAK,CAAEc,QAAQ,cAAAE,gBAAA,wBAAAC,qBAAA,GAAfD,gBAAA,CAAiBD,IAAI,cAAAE,qBAAA,uBAArBA,qBAAA,CAAuBC,MAAM,KAAI;QAC5C,CAAC;MAAA,CAAC,CAAC;MAEH,IAAI,CAAChB,gBAAgB,IAAIC,mBAAmB,KAAK,mBAAmB,EAAE;QAClEb,WAAW,CAACa,mBAAmB,CAAC;MACpC;IACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IACjE;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACHI,aAAa;IACbC,gBAAgB;IAChBC;EACJ,CAAC;AACL,CAAC;AAACH,GAAA,CAzBWD,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}