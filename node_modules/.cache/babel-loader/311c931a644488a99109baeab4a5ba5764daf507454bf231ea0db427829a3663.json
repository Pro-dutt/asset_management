{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/home/user/Documents/Asset-Management/src/services/context/loading.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext } from \"react\";\nimport { useLoadingState } from \"../hooks/loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingContext = /*#__PURE__*/createContext(null); // Set a default value if required\n\nexport const LoadingProvider = ({\n  children\n}) => {\n  _s();\n  const loadingState = useLoadingState();\n  return /*#__PURE__*/_jsxDEV(LoadingContext.Provider, {\n    value: {\n      ...loadingState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n};\n_s(LoadingProvider, \"oGifcL1N550pjaqbwmrP+RQuJQo=\", false, function () {\n  return [useLoadingState];\n});\n_c = LoadingProvider;\nexport const useLoading = () => {\n  _s2();\n  const context = useContext(LoadingContext);\n  if (context === null) {\n    throw new Error(\"useLoading must be used within a LoadingProvider\");\n  }\n  return context;\n};\n_s2(useLoading, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"LoadingProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useLoadingState","jsxDEV","_jsxDEV","LoadingContext","LoadingProvider","children","loadingState","Provider","value","fileName","lineNumber","columnNumber","_c","useLoading","context","Error","$RefreshReg$"],"sources":["/home/user/Documents/Asset-Management/src/services/context/loading.js"],"sourcesContent":["\"use client\";\n\nimport { createContext, useContext } from \"react\";\nimport { useLoadingState } from \"../hooks/loading\";\n\nconst LoadingContext = createContext(null); // Set a default value if required\n\nexport const LoadingProvider = ({ children }) => {\n    const loadingState = useLoadingState();\n\n    return <LoadingContext.Provider value={{ ...loadingState }}>{children}</LoadingContext.Provider>;\n};\n\nexport const useLoading = () => {\n    const context = useContext(LoadingContext);\n    if (context === null) {\n        throw new Error(\"useLoading must be used within a LoadingProvider\");\n    }\n    return context;\n};\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;EAAAC,GAAA,GAAAD,YAAA;AAEb,SAASE,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACjD,SAASC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,gBAAGL,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;;AAE5C,OAAO,MAAMM,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAV,EAAA;EAC7C,MAAMW,YAAY,GAAGN,eAAe,CAAC,CAAC;EAEtC,oBAAOE,OAAA,CAACC,cAAc,CAACI,QAAQ;IAACC,KAAK,EAAE;MAAE,GAAGF;IAAa,CAAE;IAAAD,QAAA,EAAEA;EAAQ;IAAAI,QAAA,EAAAf,YAAA;IAAAgB,UAAA;IAAAC,YAAA;EAAA,OAA0B,CAAC;AACpG,CAAC;AAAChB,EAAA,CAJWS,eAAe;EAAA,QACHJ,eAAe;AAAA;AAAAY,EAAA,GAD3BR,eAAe;AAM5B,OAAO,MAAMS,UAAU,GAAGA,CAAA,KAAM;EAAAhB,GAAA;EAC5B,MAAMiB,OAAO,GAAGf,UAAU,CAACI,cAAc,CAAC;EAC1C,IAAIW,OAAO,KAAK,IAAI,EAAE;IAClB,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACvE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACjB,GAAA,CANWgB,UAAU;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}