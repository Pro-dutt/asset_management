{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/home/user/Documents/Asset-Management/src/services/context/notification.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext } from \"react\";\nimport { useErrorNotification, useSuccessNotification } from \"../hooks/notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext(null); // Set a default value if required\n\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s();\n  const successNotificationState = useSuccessNotification();\n  const errorNotificationState = useErrorNotification();\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: {\n      ...successNotificationState,\n      ...errorNotificationState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 12\n  }, this);\n};\n_s(NotificationProvider, \"3rD0J94ZtRgYixNprf95bk/t0HM=\", false, function () {\n  return [useSuccessNotification, useErrorNotification];\n});\n_c = NotificationProvider;\nexport const useNotification = () => {\n  _s2();\n  const context = useContext(NotificationContext);\n  if (context === null) {\n    throw new Error(\"useNotification must be used within a NotificationProvider\");\n  }\n  return context;\n};\n_s2(useNotification, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useErrorNotification","useSuccessNotification","jsxDEV","_jsxDEV","NotificationContext","NotificationProvider","children","successNotificationState","errorNotificationState","Provider","value","fileName","lineNumber","columnNumber","_c","useNotification","context","Error","$RefreshReg$"],"sources":["/home/user/Documents/Asset-Management/src/services/context/notification.js"],"sourcesContent":["\"use client\";\n\nimport { createContext, useContext } from \"react\";\nimport { useErrorNotification, useSuccessNotification } from \"../hooks/notification\";\n\nconst NotificationContext = createContext(null); // Set a default value if required\n\nexport const NotificationProvider = ({ children }) => {\n    const successNotificationState = useSuccessNotification();\n    const errorNotificationState = useErrorNotification();\n\n    return <NotificationContext.Provider value={{ ...successNotificationState, ...errorNotificationState }}>{children}</NotificationContext.Provider>;\n};\n\nexport const useNotification = () => {\n    const context = useContext(NotificationContext);\n    if (context === null) {\n        throw new Error(\"useNotification must be used within a NotificationProvider\");\n    }\n    return context;\n};\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;EAAAC,GAAA,GAAAD,YAAA;AAEb,SAASE,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACjD,SAASC,oBAAoB,EAAEC,sBAAsB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErF,MAAMC,mBAAmB,gBAAGN,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;;AAEjD,OAAO,MAAMO,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAX,EAAA;EAClD,MAAMY,wBAAwB,GAAGN,sBAAsB,CAAC,CAAC;EACzD,MAAMO,sBAAsB,GAAGR,oBAAoB,CAAC,CAAC;EAErD,oBAAOG,OAAA,CAACC,mBAAmB,CAACK,QAAQ;IAACC,KAAK,EAAE;MAAE,GAAGH,wBAAwB;MAAE,GAAGC;IAAuB,CAAE;IAAAF,QAAA,EAAEA;EAAQ;IAAAK,QAAA,EAAAjB,YAAA;IAAAkB,UAAA;IAAAC,YAAA;EAAA,OAA+B,CAAC;AACrJ,CAAC;AAAClB,EAAA,CALWU,oBAAoB;EAAA,QACIJ,sBAAsB,EACxBD,oBAAoB;AAAA;AAAAc,EAAA,GAF1CT,oBAAoB;AAOjC,OAAO,MAAMU,eAAe,GAAGA,CAAA,KAAM;EAAAlB,GAAA;EACjC,MAAMmB,OAAO,GAAGjB,UAAU,CAACK,mBAAmB,CAAC;EAC/C,IAAIY,OAAO,KAAK,IAAI,EAAE;IAClB,MAAM,IAAIC,KAAK,CAAC,4DAA4D,CAAC;EACjF;EACA,OAAOD,OAAO;AAClB,CAAC;AAACnB,GAAA,CANWkB,eAAe;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}