{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/home/user/Documents/Asset-Management/src/layout/components/Sidebar/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState, memo, useCallback } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport styles from \"./index.module.css\";\nimport logo from \"./assets/logo.svg\";\nimport feather from \"feather-icons\";\nimport menuData from \"./data/SidebarData.json\";\nimport ICONS from \"@/lib/utils/icons\";\nimport SidebarIcons from \"./data/sidebarIcon\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  userRole = \"admin\"\n}) => {\n  _s();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const toggleSidebar = () => {\n    setIsSidebarOpen(prev => !prev);\n  };\n  const navigate = useNavigate();\n  const pathname = usePathname();\n  const [expandedGroups, setExpandedGroups] = useState({});\n  const fullPath = useMemo(() => {\n    return pathname || window.location.pathname;\n  }, [pathname]);\n  const isItemActive = useCallback(item => {\n    const normalizedFullPath = fullPath.replace(/^\\/|\\/$/g, \"\");\n    const normalizedItemLink = item.link ? item.link.replace(/^\\/|\\/$/g, \"\") : \"\";\n    if (item.link === \"/\" && normalizedFullPath === \"\") {\n      return true;\n    }\n    if (normalizedFullPath === normalizedItemLink) {\n      return true;\n    }\n    const isPathMatch = menuItemLink => {\n      const normalizedLink = menuItemLink.replace(/^\\/|\\/$/g, \"\");\n      const pathSegments = normalizedFullPath.split(\"/\");\n      const linkSegments = normalizedLink.split(\"/\");\n      return normalizedFullPath === normalizedLink || pathSegments[0] === linkSegments[0] && pathSegments.length === linkSegments.length;\n    };\n    if (item.link && isPathMatch(item.link)) {\n      return true;\n    }\n    if (item.paths && item.paths.some(path => isPathMatch(path))) {\n      return true;\n    }\n    if (item.child) {\n      return item.child.some(childItem => isItemActive(childItem));\n    }\n    return false;\n  }, [fullPath]);\n  useEffect(() => {\n    const determineExpandedGroups = items => {\n      const newExpandedGroups = {};\n      items.forEach(item => {\n        if (item.child) {\n          const isGroupActive = item.child.some(isItemActive);\n          if (isGroupActive) {\n            newExpandedGroups[item.name] = true;\n          }\n        }\n      });\n      setExpandedGroups(prev => {\n        const updatedGroups = {\n          ...prev\n        };\n        Object.keys(newExpandedGroups).forEach(key => {\n          updatedGroups[key] = true;\n        });\n        return updatedGroups;\n      });\n    };\n    determineExpandedGroups(menuData);\n  }, [pathname, menuData, isItemActive]);\n  useEffect(() => {\n    const savedState = localStorage.getItem(\"expandedGroups\");\n    if (savedState) setExpandedGroups(JSON.parse(savedState));\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"expandedGroups\", JSON.stringify(expandedGroups));\n  }, [expandedGroups]);\n  const isItemVisible = useCallback(item => {\n    return !item.permission || item.permission.includes(userRole);\n  }, [userRole]);\n  const toggleMenuGroup = useCallback(groupName => {\n    setExpandedGroups(prev => {\n      var _prev$groupName;\n      const currentState = (_prev$groupName = prev[groupName]) !== null && _prev$groupName !== void 0 ? _prev$groupName : false;\n      return {\n        ...prev,\n        [groupName]: !currentState\n      };\n    });\n  }, []);\n  useEffect(() => {\n    feather.replace();\n  }, []);\n  const handleMenuItemClick = useCallback(item => {\n    if (item && item !== pathname) {\n      navigate(item);\n    }\n  }, [pathname]);\n  const renderMenuItem = useCallback((item, index) => {\n    var _item$activeIcon2, _item$icon2;\n    const isChildMenu = typeof index === \"boolean\" ? index : false;\n    if (!isItemVisible(item)) return null;\n    if (item.child) {\n      var _expandedGroups$item$, _item$activeIcon, _item$icon;\n      const isGroupExpanded = isSidebarOpen && !isChildMenu && ((_expandedGroups$item$ = expandedGroups[item.name]) !== null && _expandedGroups$item$ !== void 0 ? _expandedGroups$item$ : false);\n      const isGroupActive = isItemActive(item);\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [isSidebarOpen && !isChildMenu && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `\n                                ${styles.group_menu} \n                                ${isGroupExpanded ? styles.active_group_menu : \"\"} \n                                ${isGroupActive ? styles.active : \"\"}\n                                ${item.className ? styles[item.className] : \"\"}\n                            `,\n          onClick: e => {\n            e.stopPropagation();\n            toggleMenuGroup(item.name);\n          },\n          children: [SidebarIcons === null || SidebarIcons === void 0 ? void 0 : SidebarIcons[((_item$activeIcon = item.activeIcon) === null || _item$activeIcon === void 0 ? void 0 : _item$activeIcon.toUpperCase()) || ((_item$icon = item.icon) === null || _item$icon === void 0 ? void 0 : _item$icon.toUpperCase()) || item.name.toUpperCase()], /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: isGroupExpanded ? styles.transform : \"\",\n              children: ICONS.ARROW_RIGHT\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }, this), isGroupExpanded && item.child.filter(isItemVisible).map(childItem => renderMenuItem(childItem, true))]\n      }, item.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => handleMenuItemClick(item.link ? item.link : \"\"),\n      className: `\n                    ${styles.menuItem}\n                    ${isItemActive(item) ? styles.active : \"\"}\n                    ${!isSidebarOpen ? styles.collapsedMenuItem : \"\"}\n                    ${item.className ? styles[item.className] : \"\"}\n                `,\n      title: item.name,\n      children: [item.icon ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.sidebar_icon,\n        children: SidebarIcons === null || SidebarIcons === void 0 ? void 0 : SidebarIcons[((_item$activeIcon2 = item.activeIcon) === null || _item$activeIcon2 === void 0 ? void 0 : _item$activeIcon2.toUpperCase()) || ((_item$icon2 = item.icon) === null || _item$icon2 === void 0 ? void 0 : _item$icon2.toUpperCase()) || item.name.toUpperCase()]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.circle_icon,\n        children: ICONS.CIRCLE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }, this), isSidebarOpen && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.title,\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 39\n      }, this)]\n    }, item.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }, this);\n  }, [isSidebarOpen, expandedGroups, isItemVisible, isItemActive, toggleMenuGroup, handleMenuItemClick]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isSidebarOpen ? styles.overlay : \"\",\n    onClick: toggleSidebar,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: event => event.stopPropagation(),\n      className: `${styles.sidebar} ${isSidebarOpen ? styles.open : styles.collapsed}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.logo,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Logo\",\n          width: 35,\n          height: 25\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), isSidebarOpen && /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: toggleSidebar,\n          className: styles.logoText,\n          children: [\"Vuexy \", ICONS.CIRCLE_DOT]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: styles.nav,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: menuData.map(item => renderMenuItem(item, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 9\n  }, this);\n};\n_s(Sidebar, \"vfS5i61G9TsOUYl6XsAk8P/C4I0=\", true, function () {\n  return [useNavigate];\n});\n_c = Sidebar;\nexport default _c2 = /*#__PURE__*/memo(Sidebar);\nvar _c, _c2;\n$RefreshReg$(_c, \"Sidebar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","React","useEffect","useMemo","useState","memo","useCallback","useLocation","styles","logo","feather","menuData","ICONS","SidebarIcons","useNavigate","jsxDEV","_jsxDEV","Sidebar","userRole","isSidebarOpen","setIsSidebarOpen","toggleSidebar","prev","navigate","pathname","usePathname","expandedGroups","setExpandedGroups","fullPath","window","location","isItemActive","item","normalizedFullPath","replace","normalizedItemLink","link","isPathMatch","menuItemLink","normalizedLink","pathSegments","split","linkSegments","length","paths","some","path","child","childItem","determineExpandedGroups","items","newExpandedGroups","forEach","isGroupActive","name","updatedGroups","Object","keys","key","savedState","localStorage","getItem","JSON","parse","setItem","stringify","isItemVisible","permission","includes","toggleMenuGroup","groupName","_prev$groupName","currentState","handleMenuItemClick","renderMenuItem","index","_item$activeIcon2","_item$icon2","isChildMenu","_expandedGroups$item$","_item$activeIcon","_item$icon","isGroupExpanded","Fragment","children","className","group_menu","active_group_menu","active","onClick","e","stopPropagation","activeIcon","toUpperCase","icon","fileName","lineNumber","columnNumber","transform","ARROW_RIGHT","filter","map","menuItem","collapsedMenuItem","title","sidebar_icon","circle_icon","CIRCLE","overlay","event","sidebar","open","collapsed","src","alt","width","height","logoText","CIRCLE_DOT","nav","_c","_c2","$RefreshReg$"],"sources":["/home/user/Documents/Asset-Management/src/layout/components/Sidebar/index.jsx"],"sourcesContent":["\"use client\";\nimport React, { useEffect, useMemo, useState, memo, useCallback } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport styles from \"./index.module.css\";\nimport logo from \"./assets/logo.svg\";\nimport feather from \"feather-icons\";\nimport menuData from \"./data/SidebarData.json\";\nimport ICONS from \"@/lib/utils/icons\";\nimport SidebarIcons from \"./data/sidebarIcon\";\nimport { useNavigate } from \"react-router\";\n\nconst Sidebar = ({ userRole = \"admin\" }) => {\n    const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n    const toggleSidebar = () => {\n        setIsSidebarOpen((prev) => !prev);\n    };\n    const navigate = useNavigate();\n    const pathname = usePathname();\n    const [expandedGroups, setExpandedGroups] = useState({});\n\n    const fullPath = useMemo(() => {\n        return pathname || window.location.pathname;\n    }, [pathname]);\n\n    const isItemActive = useCallback(\n        (item) => {\n            const normalizedFullPath = fullPath.replace(/^\\/|\\/$/g, \"\");\n            const normalizedItemLink = item.link ? item.link.replace(/^\\/|\\/$/g, \"\") : \"\";\n\n            if (item.link === \"/\" && normalizedFullPath === \"\") {\n                return true;\n            }\n\n            if (normalizedFullPath === normalizedItemLink) {\n                return true;\n            }\n\n            const isPathMatch = (menuItemLink) => {\n                const normalizedLink = menuItemLink.replace(/^\\/|\\/$/g, \"\");\n                const pathSegments = normalizedFullPath.split(\"/\");\n                const linkSegments = normalizedLink.split(\"/\");\n                return normalizedFullPath === normalizedLink || (pathSegments[0] === linkSegments[0] && pathSegments.length === linkSegments.length);\n            };\n\n            if (item.link && isPathMatch(item.link)) {\n                return true;\n            }\n            if (item.paths && item.paths.some((path) => isPathMatch(path))) {\n                return true;\n            }\n            if (item.child) {\n                return item.child.some((childItem) => isItemActive(childItem));\n            }\n            return false;\n        },\n        [fullPath]\n    );\n\n    useEffect(() => {\n        const determineExpandedGroups = (items) => {\n            const newExpandedGroups = {};\n\n            items.forEach((item) => {\n                if (item.child) {\n                    const isGroupActive = item.child.some(isItemActive);\n                    if (isGroupActive) {\n                        newExpandedGroups[item.name] = true;\n                    }\n                }\n            });\n\n            setExpandedGroups((prev) => {\n                const updatedGroups = { ...prev };\n                Object.keys(newExpandedGroups).forEach((key) => {\n                    updatedGroups[key] = true;\n                });\n                return updatedGroups;\n            });\n        };\n\n        determineExpandedGroups(menuData);\n    }, [pathname, menuData, isItemActive]);\n\n    useEffect(() => {\n        const savedState = localStorage.getItem(\"expandedGroups\");\n        if (savedState) setExpandedGroups(JSON.parse(savedState));\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem(\"expandedGroups\", JSON.stringify(expandedGroups));\n    }, [expandedGroups]);\n\n    const isItemVisible = useCallback(\n        (item) => {\n            return !item.permission || item.permission.includes(userRole);\n        },\n        [userRole]\n    );\n\n    const toggleMenuGroup = useCallback((groupName) => {\n        setExpandedGroups((prev) => {\n            const currentState = prev[groupName] ?? false;\n            return {\n                ...prev,\n                [groupName]: !currentState,\n            };\n        });\n    }, []);\n\n    useEffect(() => {\n        feather.replace();\n    }, []);\n\n    const handleMenuItemClick = useCallback(\n        (item) => {\n            if (item && item !== pathname) {\n                navigate(item);\n            }\n        },\n        [pathname]\n    );\n    const renderMenuItem = useCallback(\n        (item, index) => {\n            const isChildMenu = typeof index === \"boolean\" ? index : false;\n\n            if (!isItemVisible(item)) return null;\n\n            if (item.child) {\n                const isGroupExpanded = isSidebarOpen && !isChildMenu && (expandedGroups[item.name] ?? false);\n                const isGroupActive = isItemActive(item);\n\n                return (\n                    <React.Fragment key={item.name}>\n                        {isSidebarOpen && !isChildMenu && (\n                            <li\n                                className={`\n                                ${styles.group_menu} \n                                ${isGroupExpanded ? styles.active_group_menu : \"\"} \n                                ${isGroupActive ? styles.active : \"\"}\n                                ${item.className ? styles[item.className] : \"\"}\n                            `}\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    toggleMenuGroup(item.name);\n                                }}\n                            >\n                                {/* <i data-feather={isGroupActive ? item.activeIcon || item.icon : item.icon}></i> */}\n                                {SidebarIcons?.[item.activeIcon?.toUpperCase() || item.icon?.toUpperCase() || item.name.toUpperCase()]}\n                                <p>\n                                    {\" \"}\n                                    <span>{item.name}</span>\n                                    <span className={isGroupExpanded ? styles.transform : \"\"}>{ICONS.ARROW_RIGHT}</span>\n                                </p>\n                            </li>\n                        )}\n                        {isGroupExpanded && item.child.filter(isItemVisible).map((childItem) => renderMenuItem(childItem, true))}\n                    </React.Fragment>\n                );\n            }\n\n            return (\n                <li\n                    key={item.name}\n                    onClick={() => handleMenuItemClick(item.link ? item.link : \"\")}\n                    className={`\n                    ${styles.menuItem}\n                    ${isItemActive(item) ? styles.active : \"\"}\n                    ${!isSidebarOpen ? styles.collapsedMenuItem : \"\"}\n                    ${item.className ? styles[item.className] : \"\"}\n                `}\n                    title={item.name}\n                >\n                    {item.icon ? (\n                        <span className={styles.sidebar_icon}>{SidebarIcons?.[item.activeIcon?.toUpperCase() || item.icon?.toUpperCase() || item.name.toUpperCase()]}</span>\n                    ) : (\n                        <span className={styles.circle_icon}>{ICONS.CIRCLE}</span>\n                    )}\n                    {isSidebarOpen && <p className={styles.title}>{item.name}</p>}\n                </li>\n            );\n        },\n        [isSidebarOpen, expandedGroups, isItemVisible, isItemActive, toggleMenuGroup, handleMenuItemClick]\n    );\n\n    return (\n        <div className={isSidebarOpen ? styles.overlay : \"\"} onClick={toggleSidebar}>\n            <div onClick={(event) => event.stopPropagation()} className={`${styles.sidebar} ${isSidebarOpen ? styles.open : styles.collapsed}`}>\n                <div className={styles.logo}>\n                    <img src={logo} alt=\"Logo\" width={35} height={25} />\n                    {isSidebarOpen && (\n                        <span onClick={toggleSidebar} className={styles.logoText}>\n                            Vuexy {ICONS.CIRCLE_DOT}\n                        </span>\n                    )}\n                </div>\n\n                <nav className={styles.nav}>\n                    <ul>{menuData.map((item) => renderMenuItem(item, false))}</ul>\n                </nav>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(Sidebar);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}